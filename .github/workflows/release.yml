name: "Release"

on:
  release:
    types:
      - published

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare
        id: prep
        shell: bash
        run: |
          DOCKER_IMAGE=ghcr.io/sitkoru/pgbouncer
          VERSION=${GITHUB_REF#refs/tags/v}
          echo VERSION=${VERSION}
          MAJOR=`echo $VERSION | cut -d. -f1`
          echo MAJOR=${MAJOR}
          MINOR=`echo $VERSION | cut -d. -f2`
          echo MINOR=${MINOR}
          if [[ $VERSION =~ ^v.*$ ]]; then
            TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${MAJOR}.${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          else
            TAGS="${DOCKER_IMAGE}:${VERSION}-${{ github.run_id }}"
          fi
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.BOT_NAME }}
          password: ${{ secrets.BOT_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}